{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","numPads","symbol","id","operatorPads","NUMERIC_FORMAT","props","_this","Object","D_newDesktop_Front_end_Xed_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_newDesktop_Front_end_Xed_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_newDesktop_Front_end_Xed_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","inputs","nums","result","previousResult","handleClick","bind","D_newDesktop_Front_end_Xed_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleEvaluation","clearInput","e","target","classList","nDigit","innerHTML","toString","length","setState","concat","D_newDesktop_Front_end_Xed_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","indexOf","nOperator","eval","join","_this2","numbers","map","x","index","react__WEBPACK_IMPORTED_MODULE_7___default","className","key","onClick","operators","React","Component"],"mappings":"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","file":"static/js/main.3729dc11.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\n\n\n\nconst numPads = [\n  {symbol: '7', id:\"seven\"},\n  {symbol: '8', id:\"eight\"},\n  {symbol: '9', id:\"nine\"},\n  {symbol: '4', id:\"four\"},\n  {symbol: '5', id:\"five\"},\n  {symbol: '6', id:\"six\"},\n  {symbol: '1', id:\"one\"},\n  {symbol: '2', id:\"two\"},\n  {symbol: '3', id:\"three\"},\n  {symbol: '0', id:\"zero\"},\n  {symbol:'.', id:\"decimal\"}\n];\n\nconst operatorPads = [\n  {symbol: '+',id:\"add\"},\n  {symbol: '-', id:\"subtract\"},\n  {symbol: '/', id:\"divide\"},\n  {symbol: '*', id:\"multiply\"}\n\n]\n\nconst NUMERIC_FORMAT = /^\\d*\\.?\\d*$/;\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      inputs:[],\n      nums:\"0\",\n      result:\"\",\n      previousResult:\"\"\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleEvaluation = this.handleEvaluation.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n  }\n\n  handleClick(e){\n    if(e.target.classList[0] === 'number'){\n      let nDigit = e.target.innerHTML.toString();\n      if(this.state.nums.length < 16){\n        if(nDigit !== '.'){\n          if(!this.state.nums.match(/[\\+\\-\\*\\/]/)){\n            this.setState({nums: this.state.nums === '0' ? nDigit: this.state.nums + nDigit , result:\"\"});\n          }else{\n            this.setState({inputs:[...this.state.inputs,this.state.nums],nums:nDigit});\n          }\n        }else if(this.state.nums.indexOf('.') < 0){\n          this.setState({nums: this.state.nums + nDigit});\n        }\n      }\n    }else{\n      let nOperator = e.target.innerHTML.toString();\n\n      if(this.state.previousResult !== \"\" && this.state.inputs.length === 0){\n        this.setState({inputs:[this.state.previousResult],nums:nOperator,result:\"\"});\n      }else if(this.state.nums.match(NUMERIC_FORMAT)){\n\n        this.setState({inputs:[...this.state.inputs,this.state.nums],nums:nOperator});\n      }else{\n\n        this.setState({nums:nOperator});\n      }\n    }\n  }\n\n  clearInput(){\n    this.setState({\n      inputs:[],\n      nums:\"0\",\n      result:\"\",\n      previousResult:\"\"\n    });\n  }\n\n  handleEvaluation(){\n    if(this.state.inputs.length >= 2 && this.state.nums.match(NUMERIC_FORMAT)){\n      this.setState({inputs:[...this.state.inputs,this.state.nums]},function(){\n        this.setState({inputs:[],nums:'0',result:eval(this.state.inputs.join(''))}, function(){this.setState({previousResult:this.state.result})});\n      });\n    }\n  }\n\n  render(){\n    const numbers = numPads.map((x,index) => <div id={x.id} className={\"number pad item\"+index} key={x.symbol} onClick={this.handleClick}>{x.symbol}</div>);\n    const operators = operatorPads.map((x,index) => <div id={x.id} className={\"operator pad operator\"+index} key={x.symbol} onClick={this.handleClick}>{x.symbol}</div>);\n    return (\n      <div className=\"App\">\n          <div className=\"pad-container\">\n            <div id=\"display1\" className=\"display\">{this.state.inputs}</div>\n            <div id=\"display\" className=\"display\">{this.state.result === \"\" ? this.state.nums : this.state.result}</div>\n              <div id=\"clear\" className=\"clear pad\" onClick={this.clearInput}>AC</div>\n              {numbers}\n              {operators}\n              <div id=\"equals\" className=\"equal pad\" onClick={this.handleEvaluation}>=</div>\n          </div>\n          \n      </div>\n    );  \n  }\n}\n\nexport default App;\n"],"sourceRoot":""}